#!/usr/bin/env zsh

set -eu

echo "Create heroku app (unless it already exists)"
heroku create "$HEROKU_APP_NAME" --no-remote \
  || echo "app already exists"

echo "Add git remote for heroku"
git remote rm heroku-${HEROKU_APP_NAME} \
  || echo "heroku remote did not exist"
git remote add heroku-${HEROKU_APP_NAME} \
  "https://git.heroku.com/$HEROKU_APP_NAME.git"

echo "Adding ruby build pack"
heroku buildpacks
# TODO: make this work???
# if [[ $1 != '--create' ]] # NOTE: don't "remove" if run with --create flag
# then
  heroku buildpacks:remove \
    https://github.com/failure-driven/heroku-buildpack-monorepo \
    || echo "nodejs buildpack already removed"
  heroku buildpacks:remove heroku/ruby \
    || echo "ruby buildpack already removed"
# fi
heroku buildpacks:add \
  --app ${HEROKU_APP_NAME} \
  --index 1 https://github.com/failure-driven/heroku-buildpack-monorepo
heroku buildpacks:add \
  --app ${HEROKU_APP_NAME} \
  --index 2 heroku/ruby

#echo "Adding heroku-sendgrid addon (unless it already exists)"
#(heroku addons | grep sendgrid) || heroku addons:create sendgrid:starter

#echo "Adding heroku-redis addon (unless it already exists)"
# changing redis scale will NOT automatically scale heroku - this requires clickops
#(heroku addons | grep heroku-redis) || heroku addons:create heroku-redis:"$REDIS_SCALE"

#echo "Adding loggly drain (unless it already exists)"
#heroku drains:add "$LOGGLY_DRAIN_BASE_URL/tag/$HEROKU_APP_NAME" || echo "drain added"

echo "Updating heroku environment variables"
# NOTE if you delete or rename variables here, you will need to remember to
# delete the old variables from Heroku after deployment. Otherwise the old
# variables will hang around in Heroku.
heroku config:set \
  --app ${HEROKU_APP_NAME} \
  APP_BASE=rap 
heroku config:add \
  RAILS_MASTER_KEY="$RAILS_MASTER_KEY" \
  > /dev/null

# echo "Confirming heroku domain"
# if [[ $1 = '--create' ]] # NOTE domains:add is not idempotent so it can only be run once
# then
#   heroku domains:add \
#    "$HEROKU_DOMAIN" \
#    > /dev/null
# else
#   heroku domains # NOTE: do something with the output
# end

echo "Performing heroku deployment"
git push --force heroku-${HEROKU_APP_NAME} main

echo "Performing database migrations"
heroku run \
  --app ${HEROKU_APP_NAME} \
  --exit-code bin/rake db:migrate

# changing web scale will automatically scale heroku web servers out/up
#echo "Scaling web and worker process types"
#heroku ps:scale \
#   --app ${HEROKU_APP_NAME} \
#   web="$WEB_SCALE" \
#   > /dev/null

echo "Performing process restart"
heroku ps:restart \
  --app ${HEROKU_APP_NAME}

echo "Deployment completed"
